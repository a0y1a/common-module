@model List<T_Module>
@{
    ViewBag.Title = "模块";
}

@section head{
    <style type="text/css">
        #btnAdd {
            margin:-5px 10px 5px 0;
        }
    </style>
}

@Html.Tab(new ListItem[] { new ListItem { Text = "模块", Selected = true, Value = "/System/Modules" }, new ListItem { Text = "具体项", Value = "/Business/Items" } })

<div class="row">
    <button id="btnAdd" onclick="create()" type="button" class="btn btn-success btn-sm pull-right"><span class="glyphicon glyphicon-plus"></span> Create</button>
    <div class="col-md-12">
        @for (int i = 0; i < Model.Count; i++)
        {
            <div class="panel-group" role="tablist">
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="@($"collapse{Model[i].Id}")">
                        <h4 class="panel-title">
                            <a class="" role="button" data-toggle="collapse" href="#@Model[i].Id" aria-expanded="true" aria-controls="@Model[i].Id">
                                @($"{Model[i].Sequence}. {Model[i].Name}")
                            </a>
                        </h4>
                    </div>
                    <div id="@Model[i].Id" class="panel-collapse collapse in" role="tabpanel" aria-expanded="true" style="">
                        <ul class="list-group">
                            @foreach (var item in Model[i].Modules.OrderBy(m => m.Sequence))
                            {
                                <li class="list-group-item"><a href="@item.Url">@item.Name</a></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section foot{
    <script type="text/javascript">
        function create() {
            util.form().url("/System/CreateModule")
                .title("创建模块")
                .onSuccess(function () {
                    window.location.reload();
                })
                .onFail(function (error) {
                    $.toast({
                        text: error, // Text that is to be shown in the toast
                        heading: '提示', // Optional heading to be shown on the toast
                        icon: 'error', // Type of toast icon
                        position: 'top-center'
                    });
                    this.close();
                })
                .open();
        }
    </script>
}